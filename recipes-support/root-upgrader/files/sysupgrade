#!/bin/sh

grub_partition=/dev/sda2
grub_mnt=/mnt
upgrade_mnt=/mnt

prompt_to_continue()
{
    partition=${1}
    answer_default="N"
    echo -n "Proceed with upgrade onto partition ${partition} (y/N): "
    read answer
    answer="${answer:-$answer_default}"

    case "${answer}" in
        [Yy]*)
            ;;
        *)
            echo "Aborting upgrade"
            exit 1
            ;;
    esac
}

if [ "x${1}" = "x" ]; then
    echo "Usage: ${0} <path/to/some-img>.tar.xz"
    exit 1
fi

if [ ! -f ${1} ]; then
    echo "Usage: ${0} <path/to/some-img>.tar.xz"
    exit 1
fi


mount | grep ${grub_partition}

if [ $? -eq 0 ]; then
    echo "Found grub partition (${grub_partition}) already mounted"
    echo "This is unexpected. Aborting."
    exit 1
fi

image=${1}

current_root=`findmnt -n -o SOURCE /`

if [ "${current_root}" = "/dev/sda3" ]; then
    upgrade_root="/dev/sda4"
    root_name="rootb"
elif [ "${current_root}" = "/dev/sda4" ]; then
    upgrade_root="/dev/sda3"
    root_name="roota"
else
    echo "Root partition is unexpected. Aborting."
    exit 1
fi

echo "Image: ${image}"
echo "Current root: ${current_root}"
echo "Upgrade root: ${upgrade_root}"

# prompt_to_continue ${upgrade_root}

echo "Formatting ${upgrade_root} as ext4"

mkfs.ext4 -q -F -L ${root_name} ${upgrade_root}

if [ $? -ne 0 ]; then
    echo "Error formatting the new root partition"
    exit 1
fi

echo "Mounting ${upgrade_root} at ${upgrade_mnt}"

mount -t ext4 ${upgrade_root} ${upgrade_mnt}

if [ $? -ne 0 ]; then
    echo "Error mounting new root partition"
    exit 1
fi

echo "Extracting ${image} to ${upgrade_mnt}"

EXTRACT_UNSAFE_SYMLINKS=1 tar -C /mnt -xJf ${image}

if [ $? -ne 0 ]; then
    echo "Error extracting new filesystem"
    umount ${upgrade_root}
    exit 1
fi

echo "Checking for new kernel"

if [ ! -f /mnt/boot/bzImage ]; then
    echo "Failed to find /mnt/boot/bzImage"
    umount ${upgrade_root}
    exit 1
fi

if [ -x /usr/bin/syshook ]; then
    echo "Running /usr/bin/syshook"
    /usr/bin/syshook ${upgrade_mnt}

    if [ $? -ne 0 ]; then
        umount ${upgrade_root}
        exit 1
    fi
fi

umount ${upgrade_root}

echo "Updating grub"

if [ -x /usr/bin/grub-editenv ]; then

    echo "Mounting grub partition ${grub_partition} at ${grub_mnt}"
    mount ${grub_partition} ${grub_mnt}

    if [ $? -ne 0 ]; then
        echo "Failed to mount ${grub_partition}"
        exit 1
    fi

    if [ ! -f ${grub_mnt}/grub/grubenv ]; then
        echo "Creating a new grubenv file"

        grub-editenv ${grub_mnt}/grub/grubenv create

        if [ $? -ne 0 ]; then
            echo "Failed to create ${grub_mnt}/grub/grubenv"
            umount ${grub_partition}
            exit 1
        fi
    fi

    echo "Updating the grubenv file"

    if [ "${root_name}" = "roota" ]; then
        grub-editenv ${grub_mnt}/grub/grubenv set default=0 fallback=1 timeout=5
    else
        grub-editenv ${grub_mnt}/grub/grubenv set default=1 fallback=0 timeout=5
    fi

    if [ $? -ne 0 ]; then
        echo "Failed to update ${grub_mnt}/grub/grubenv"
        umount ${grub_partition}
        exit 1
    fi

    umount ${grub_partition}
else
    echo "Failed to find /usr/bin/grub-editenv"
    echo "Grub default was not changed"
    echo "Select new system manually at grub prompt"
fi

echo "Reboot to use the new system"
